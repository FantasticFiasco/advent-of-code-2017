package day1_test

import (
	"day1"
	"github.com/stretchr/testify/assert"
	"testing"
)

func TestSolvePart1(t *testing.T) {
	input := toNumberArray(input)

	actual := day1.SolvePart1(input)

	assert.Equal(t, 1069, actual)
}

func TestSolvePart1GivenExample1(t *testing.T) {
	input := toNumberArray("1122")

	actual := day1.SolvePart1(input)

	assert.Equal(t, 3, actual)
}

func TestSolvePart1GivenExample2(t *testing.T) {
	input := toNumberArray("1111")

	actual := day1.SolvePart1(input)

	assert.Equal(t, 4, actual)
}

func TestSolvePart1GivenExample3(t *testing.T) {
	input := toNumberArray("1234")

	actual := day1.SolvePart1(input)

	assert.Equal(t, 0, actual)
}

func TestSolvePart1GivenExample4(t *testing.T) {
	input := toNumberArray("91212129")

	actual := day1.SolvePart1(input)

	assert.Equal(t, 9, actual)
}

func TestSolvePart2(t *testing.T) {
	input := toNumberArray(input)

	actual := day1.SolvePart2(input)

	assert.Equal(t, 1268, actual)
}

func TestSolvePart2GivenExample1(t *testing.T) {
	input := toNumberArray("1212")

	actual := day1.SolvePart2(input)

	assert.Equal(t, 6, actual)
}

func TestSolvePart2GivenExample2(t *testing.T) {
	input := toNumberArray("1221")

	actual := day1.SolvePart2(input)

	assert.Equal(t, 0, actual)
}

func TestSolvePart2GivenExample3(t *testing.T) {
	input := toNumberArray("123425")

	actual := day1.SolvePart2(input)

	assert.Equal(t, 4, actual)
}

func TestSolvePart2GivenExample4(t *testing.T) {
	input := toNumberArray("123123")

	actual := day1.SolvePart2(input)

	assert.Equal(t, 12, actual)
}

func TestSolvePart2GivenExample5(t *testing.T) {
	input := toNumberArray("12131415")

	actual := day1.SolvePart2(input)

	assert.Equal(t, 4, actual)
}


const input =
 	"36743676522426214741687639282183216978128565594112364817283598621384839756628424146779311928318383597235" +
	"96864468766515959157341323361671711215775246919184575771292834762472643851621115394689224144952314841942" +
	"62592917889386218863347344978231632813893898536759322467341535638612338949526576258684154323161554872428" +
	"13798425779743561987563734944962846865263722712768674838244444385768568489842989878163655771847362656153" +
	"37226594546412866841243924896693939876544617185514454428546351725874981373131436594737254881143464638159" +
	"52731729824661422484742387625548586546794154186934785126418641683987221996387756677449779411837724945386" +
	"85398862344164521446115925528534491788728448668455349588972443295391385389551783289417349823383324748411" +
	"68919821932999666675225181556252275937454265296914769641966991453458673243691279851969772258679574637169" +
	"73384167168422143133932285874133995347163949841839431233755178196228379727964311662646464328934785576593" +
	"87795573234889141897313158457637142238315327877493994933514112645586351127139429281675912366669475931711" +
	"97433227136828741398568237494319588645592783957398646455514167929199864593668363916258837597454946776762" +
	"34639355618478695273833952782489523147921121131262312467427531197481138288439178125472244983198499475177" +
	"45625844819175973986843636628414965664466582172419197227695368492433353199233558872319529626825788288176" +
	"27554656647482425733686397757434732846915331942888374869639954497413339258982334377389731317333656888338" +
	"53641663363623986366844598862839642422492289383832192555139964685869535196381115999352291152288375592427" +
	"52925943653623682985576323929415445443378189472782454958232341986626791182861644112974418239286486722654" +
	"44214485117353875685964721876813457285833184954326616967274522139165936367492146948114368695247877171458" +
	"57933229268246234829235799864347417141671343463845513626641778654528953489489534723289669957311696725735" +
	"55621939584872187999325322327893336736611929752613241935211664248961527687778371971259654541239471766714" +
	"469122213793348414477789271187324629397292446879752673"

func toNumberArray(sequence string) []int {
	sequenceLength := len(sequence)
	numbers := make([]int, sequenceLength)

	for i := 0; i < sequenceLength; i++ {
		rune := rune(sequence[i])
		numbers[i] = int(rune) - '0'
	}

	return numbers
}